{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/Qiksar/schema/main/qikblox.json",
  "title": "qikblox",
  "description": "Schema definition for QikBlox data models",
  "type": "object",
  "definitions": {
    "repositoryDefinition": {
      "description": "specifies an entity, its fields and relationships",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique repository name",
          "type": "string"
        },
        "help": {
          "description": "Documentation on repository purpose",
          "type": "string"
        },
        "caption": {
          "description": "Text to display in user interface",
          "type": "string"
        },
        "path": {
          "description": "API path if applicable",
          "type": "string"
        },
        "icon": {
          "description": "Icon to display in user interface",
          "type": "string"
        },
        "inherit": {
          "description": "a string containing the name of another repository to inherit details from",
          "type": "string"
        },
        "table_entity": {
          "type": "object",
          "properties": {
            "entity": {
              "type": "string"
            },
            "table": {
              "type": "string"
            }
          }
        },
        "treeview": {
          "description": "Indicates if data can be displayed hierarchically",
          "type": "boolean"
        },
        "data_fields": {
          "description": "specifies aditional fields for the join table",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/repositoryField"
            }
          }
        },
        "icon_map": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "label",
              "value"
            ]
          }
        },
        "icon_field": {
          "type": "string"
        },
        "noroute": {
          "type": "boolean",
          "default": false
        },
        "collapse_fields": {
          "type": "object",
          "properties": {
            "source_field": {
              "type": "string"
            },
            "key_path": {
              "type": "string"
            },
            "value_path": {
              "type": "string"
            }
          },
          "required": [
            "source_field",
            "key_path",
            "value_path"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "field": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique fieldname",
          "type": "string"
        },
        "help": {
          "description": "Documentation to help users understand the purpose of the field",
          "type": "string"
        },
        "table": {
          "description": "Name of the underlying data source or database table",
          "type": "string"
        },
        "flatten": {
          "description": "Specifies fields to import from the specified table",
          "type": "string"
        },
        "data_type": {
          "description": "field type",
          "string": "string",
          "enum": [
            "string",
            "integer",
            "number",
            "timestamp",
            "jsonb"
          ]
        },
        "options": {
          "description": "Optional field hints",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "hidden",
              "ongrid",
              "ontree",
              "unique",
              "required",
              "readonly",
              "sortable",
              "compact",
              "alignRight",
              "full-text-search",
              "writeonce",
              "lowercase",
              "uppercase",
              "titlecase"
            ]
          }
        },
        "filter": {
          "description": "Type of filter which the field can supply",
          "type": "string",
          "enum": [
            "filter-list-single",
            "filter-list-multi",
            "filter-uuid",
            "filter-string",
            "filter-boolean",
            "filter-number",
            "filter-date"
          ]
        },
        "generator": {
          "description": "Crudio data generator to use, and must be wrapped in [ ], e.g. [name]",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "repositoryField": {
      "description": "Specifies a data field",
      "oneOf": [
        {
          "description": "Template field name to inherit",
          "type": "string"
        },
        {
          "description": "Fields available to be inherited by any repository",
          "additionalProperties": {
            "$ref": "#/definitions/field"
          }
        }
      ]
    }
  },
  "properties": {
    "namespace": {
      "description": "Unique name for the model",
      "type": "string"
    },
    "schemaName": {
      "description": "Short name for the model",
      "type": "string"
    },
    "KeyFieldName": {
      "description": "Column ID for the primary key applied to all tables",
      "type": "string"
    },
    "NameFields": {
      "description": "List of column names that can provide tags, keynames and other unique label values",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ParentIdColumn": {
      "description": "Name of the column that relates an entity to its parent, which exists in the same table",
      "type": "string"
    },
    "ParentColumn": {
      "description": "Name of the GraphQL object column which represents the parent entity",
      "type": "string"
    },
    "ChildrenColumn": {
      "description": "Name of the GraphQL array which represents the array of child entities",
      "type": "string"
    },
    "TreeLabelColumn": {
      "description": "Name of the column which provides the label for a tree node",
      "type": "string"
    },
    "TreeIconColumn": {
      "description": "Name of the column which provides the icon for a tree node",
      "type": "string"
    },
    "SelectorQuery": {
      "description": "Describes how to transform an entity into a format for dropdown selection",
      "properties": {
        "columns": {
          "description": "Columns to extract from source entities",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderby": {
          "description": "Column to sort by",
          "type": "string"
        },
        "help": {
          "description": "Description of where the selectr might be used",
          "type": "string"
        }
      },
      "required": [
        "columns",
        "orderby",
        "help"
      ]
    },
    "Joins": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "table1": {
            "type": "string"
          },
          "table2": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "table1",
          "table2"
        ]
      }
    },
    "BaseFields": {
      "description": "Fields inherited by all repositories",
      "type": "array",
      "items": {
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/field"
          }
        }
      }
    },
    "TemplateFields": {
      "description": "Fields available to be inherited by any repository",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/field"
          }
        }
      }
    },
    "RepositoryDefinitions": {
      "description": "specify the repositories in the datamodel",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/repositoryDefinition"
          }
        }
      }
    }
  },
  "required": [
    "namespace","schemaName", "KeyFieldName","NameFields","ParentIdColumn","ParentColumn","ChildrenColumn","TreeLabelColumn","TreeIconColumn","SelectorQuery"
  ]
}
